name: .NET Core

on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  release:
    name: Release
    strategy:
      matrix:
        kind: ['linux', 'windows', 'macOS']
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64
          - kind: macOS
            os: macos-latest
            target: osx-x64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.x
      - name: Build
        shell: bash
        run: |
          # Define some variables for things we need
          release_name="tql-${{ matrix.target }}"
          version=$(cut -c 2- <<< "${{ github.event.release.tag_name }}")

          echo "Building version > $version <"

          # Build everything
          dotnet publish TransactionQL.Plugins.ING/TransactionQL.Plugins.ING.fsproj \
            -c Release --runtime "${{ matrix.target }}" -o "dist/ing"
          dotnet publish TransactionQL.Plugins.Bunq/TransactionQL.Plugins.Bunq.fsproj \
            -c Release --runtime "${{ matrix.target }}" -o "dist/bunq"
          dotnet publish TransactionQL.Plugins.ASN/TransactionQL.Plugins.ASN.fsproj \
            -c Release --runtime "${{ matrix.target }}" -o "dist/asn"

          dotnet publish TransactionQL.Console/TransactionQL.Console.fsproj \
            -c Release --runtime "${{ matrix.target }}" -o "$release_name/console" \
            -p:PublishSingleFile=true --no-self-contained -p:Version=$version
          dotnet publish TransactionQL.DesktopApp/TransactionQL.DesktopApp.csproj \
            -c Release --runtime "${{ matrix.target }}" -o "$release_name/desktop" \
            -p:PublishSingleFile=true --no-self-contained -p:Version=$version

          # Copy plugin DLLs
          mkdir "$release_name/plugins"
          cp "dist/asn/TransactionQL.Plugins.ASN.dll" "$release_name/plugins/asn.dll"
          cp "dist/bunq/TransactionQL.Plugins.Bunq.dll" "$release_name/plugins/bunq.dll"
          cp "dist/ing/TransactionQL.Plugins.ING.dll" "$release_name/plugins/ing.dll"

          # Pack files
          if [ "${{ matrix.target }}" == "win-x64" ]; then
            7z a -tzip "${release_name}.zip" "./${release_name}/*"
          else
            tar czvf "${release_name}.tar.gz" "$release_name"
          fi

          # Delete output directory
          rm -r "$release_name"
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: "tql*"
          prerelease: ${{ contains(github.event.release.tag_name, '-') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
